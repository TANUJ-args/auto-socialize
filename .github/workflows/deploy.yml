name: Deploy SocialFlow

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: socialflow_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          backend/package-lock.json
    
    - name: Install frontend dependencies
      run: npm ci
    
    - name: Install backend dependencies
      run: cd backend && npm ci
    
    - name: Generate Prisma Client
      run: cd backend && npx prisma generate
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/socialflow_test
    
    - name: Run database migrations
      run: cd backend && npx prisma migrate deploy
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/socialflow_test
    
    - name: Lint frontend
      run: npm run lint
    
    - name: Build frontend
      run: npm run build
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
    
    - name: Test backend
      run: cd backend && npm test
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/socialflow_test
        JWT_SECRET: test-secret-key-minimum-32-characters

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push backend
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/socialflow-backend:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/socialflow-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/socialflow-frontend:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/socialflow-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production'
    
    steps:
    - name: Deploy to production server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /opt/socialflow
          docker-compose pull
          docker-compose up -d
          docker system prune -f