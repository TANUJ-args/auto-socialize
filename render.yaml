services:
- type: web
  name: socialflow-backend
  env: node
  rootDir: backend
  buildCommand: npm install && npx prisma generate
  startCommand: npx prisma migrate deploy && npm start
  envVars:
  - key: NODE_ENV
    value: production
  - key: PORT
    value: 5000
  - key: DATABASE_URL
    value: "" # Placeholder value, replace with actual database URL
  - key: JWT_SECRET
    value: "" # Placeholder value, replace with actual JWT secret
  - key: CLIENT_URL
    value: https://socialflow-frontend.onrender.com

- type: web
  name: socialflow-frontend
  env: static
  buildCommand: npm install && npm run build
  staticPublishPath: ./dist
  envVars:
  - key: VITE_API_URL
    value: https://socialflow-backend.onrender.com
    
    # Custom headers for better performance
    headers:
      - path: /*
        name: Cache-Control
        value: public, max-age=31536000, immutable
      - path: /index.html
        name: Cache-Control
        value: no-cache
    
    # Custom routes for SPA
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

# 📋 DEPLOYMENT INSTRUCTIONS:
#
# 1. 🗄️ CREATE DATABASE (2 minutes):
#    - Go to https://console.neon.tech
#    - Sign up (free) → Create project "socialflow"
#    - Copy your PostgreSQL connection string
#
# 2. 🚀 DEPLOY ON RENDER (3 minutes):
#    - Go to https://dashboard.render.com
#    - Sign up → Connect GitHub
#    - Click "New" → "Blueprint" 
#    - Connect this repository
#    - Render will read this file and create both services!
#
# 3. ⚙️ SET REQUIRED VARIABLES (2 minutes):
#    Go to your backend service → Environment tab:
#    - DATABASE_URL = your_neon_connection_string
#    - JWT_SECRET = generate_32_character_secret
#
# 4. ✅ DONE! (2 minutes):
#    - Both services will deploy automatically
#    - Frontend: https://socialflow-frontend.onrender.com
#    - Backend: https://socialflow-backend.onrender.com
#
# 🔑 Generate JWT Secret:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
#
# 🎯 Total Time: ~10 minutes for full deployment!
#
# 📈 ADD FEATURES LATER:
# - Instagram: Add FACEBOOK_APP_ID and FACEBOOK_APP_SECRET
# - AI Content: Add GEMINI_API_KEY or HF_TOKEN  
# - File Uploads: Add Cloudinary credentials
# - Email: Add SMTP credentials
#
# 🆘 TROUBLESHOOTING:
# - Check logs in Render dashboard
# - Verify environment variables are set
# - Test database connection
# - Ensure both services show "Live" status